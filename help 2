import numpy as np
import pandas as pd
from sklearn.metrics import accuracy_score, f1_score

# ... [same code as before up to model training]

# Get probabilities of each class for each sample
probabilities = model.predict_proba(X_test)

# Get top 3 predictions' indices
top3_indices = np.argsort(-probabilities, axis=1)[:, :3]

# Get top 3 predictions' labels
top3_labels = label_encoder.inverse_transform(top3_indices)

# Get top 3 predictions' probabilities
top3_probs = np.array([probabilities[i, top3_indices[i]] for i in range(probabilities.shape[0])]) * 100  # Convert to percentages

# Evaluate the model based on the top prediction
y_pred_top = top3_indices[:, 0]
accuracy = accuracy_score(y_test, y_pred_top)
f1 = f1_score(y_test, y_pred_top, average='weighted')

print(f"Overall Accuracy: {accuracy:.2f}")
print(f"Overall F1 Score: {f1:.2f}\n")

# Combine results into a DataFrame
df_results = pd.DataFrame({
    'Flight_No': X_test['no'].values,
    '1st_Predicted_Load_Country': top3_labels[:, 0],
    '1st_Prediction_Probability_%': top3_probs[:, 0],
    '2nd_Predicted_Load_Country': top3_labels[:, 1],
    '2nd_Prediction_Probability_%': top3_probs[:, 1],
    '3rd_Predicted_Load_Country': top3_labels[:, 2],
    '3rd_Prediction_Probability_%': top3_probs[:, 2]
})

print(df_results.head())
