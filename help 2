
# Sort the dataframe by 'no' and departure date
df = df.sort_values(by=['no', 'departuredate'])

# Function to update the top countries for each row
def update_top_countries(flight_df):
    load_countries = flight_df['load_country'].tolist()
    top_countries = []
    
    for idx, country in enumerate(load_countries):
        top_countries.append(country)
        for i in range(5):
            if idx >= i:
                flight_df.at[flight_df.index[idx], f'top_country_{i+1}'] = top_countries[-(i+1)]
                
    return flight_df

# Apply the function to each flight group
df_grouped = df.groupby('no').apply(update_top_countries)

# Fill NaN values with a placeholder (like 'None' or '')
df_grouped.fillna('', inplace=True)
