import pandas as pd
import numpy as np

# Assuming your dataframe is named `df` and the set of features is `features`

# 1. Add Identifier Column
df['identifier'] = 'old'

# 2. Add New Rows
unique_flights = df['no'].unique()
new_rows = []
for flight in unique_flights:
    last_row = df[df['no'] == flight].iloc[-1].copy()
    last_row['identifier'] = 'new'
    new_rows.append(last_row)

# Convert the list of new rows to a DataFrame and concatenate with the original df
new_df = pd.DataFrame(new_rows)
df = pd.concat([df, new_df], ignore_index=True)

# 3. Populate the New Rows
# Dep_month: Current month
current_month = pd.Timestamp.now().month
df.loc[df['identifier'] == 'new', 'Dep_month'] = current_month

# Four columns with mean values
cols_to_mean = ['Voyage_days', 'mean_voyagewk_routes', 'route_class_count', 'Arr_month']
for col in cols_to_mean:
    means = df.groupby('no')[col].transform('mean')
    df.loc[df['identifier'] == 'new', col] = means[df['identifier'] == 'new']

# Lag values for load_country and discharge_country
for lag in range(1, 4):
    df[f'prev_load_ctr{lag}'] = df.groupby('no')['load_country'].shift(lag)
    df[f'prev_disc_ctr{lag}'] = df.groupby('no')['discharge_country'].shift(lag)

# Keep Unique_routes and datagroup_1, datagroup_2 unchanged
# (This step is not needed as they are already copied over in the new rows)

# Return the final DataFrame with features only
final_df = df[features]

final_df
